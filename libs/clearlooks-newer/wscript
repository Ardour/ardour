#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
import os
import sys

def options(opt):
    pass

def configure(conf):
    pass

def build(bld):
    obj = bld(features = 'c cshlib')
    obj.source = '''
    animation.c
    cairo-support.c
    clearlooks_draw.c
    clearlooks_draw_glossy.c
    clearlooks_draw_gummy.c
    clearlooks_draw_inverted.c
    clearlooks_rc_style.c
    clearlooks_style.c
    clearlooks_theme_main.c
    support.c
    widget-information.c
    '''

    obj.name = 'clearlooks-newer'
    obj.target = 'clearlooks'
    obj.uselib = 'GTK'
    obj.includes = '.'
    obj.install_path = os.path.join(bld.env['LIBDIR'], 'engines')
    autowaf.ensure_visible_symbols (obj, True)

    if sys.platform == 'darwin':
        # Bit of a hack: make a symlink to the .dylib that meets GTK's criteria for finding it (namely that the library must be a *.so
        # and that it must reside in a directory called `engines')
        obj = bld(target = 'engines', rule = 'mkdir -p ${TGT} && rm -f ${TGT}/libclearlooks.so && ln -s ../libclearlooks.dylib ${TGT}/libclearlooks.so')
    elif bld.env['build_target'] != 'mingw':
        # this is a hack so that running ./ardev will work, since it sets GTK_PATH to include this dir and GTK will search {thisdir}/engines
        obj = bld(target = 'engines', rule = 'mkdir -p ${TGT} && rm -f ${TGT}/libclearlooks.so && ln -s ../libclearlooks.so ${TGT}/libclearlooks.so')
