#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
import glob
import os

# Version of this package (even if built as a child)
LIBTAGLIB_VERSION = '0.0.0'

# Library version (UNIX style major, minor, micro)
# major increment <=> incompatible changes
# minor increment <=> compatible changes (additions)
# micro increment <=> no interface changes
LIBTAGLIB_LIB_VERSION = '0.0.0'

# Variables for 'waf dist'
APPNAME = 'libtaglib'
VERSION = LIBTAGLIB_VERSION

# Mandatory variables
top = '.'
out = 'build'

def options(opt):
    autowaf.set_options(opt)

def configure(conf):
    if conf.is_defined('USE_EXTERNAL_LIBS'):
        autowaf.check_pkg(conf, 'taglib', uselib_store='TAGLIB', atleast_version="1.4", mandatory=True)
    else:
        conf.load('compiler_cxx')
        autowaf.configure(conf)

def build(bld):
    if bld.is_defined('USE_EXTERNAL_LIBS'):
        return

    # Library
    obj = bld(features = 'cxx cxxshlib')
    sources = bld.path.ant_glob('taglib/*.cpp')
    sources += bld.path.ant_glob('taglib/flac/*.cpp')
    sources += bld.path.ant_glob('taglib/mpc/*.cpp')
    sources += bld.path.ant_glob('taglib/mpeg/*.cpp')
    sources += bld.path.ant_glob('taglib/mpeg/id3v1/*.cpp')
    sources += bld.path.ant_glob('taglib/mpeg/id3v2/*.cpp')
    sources += bld.path.ant_glob('taglib/mpeg/id3v2/frames/*.cpp')
    sources += bld.path.ant_glob('taglib/ogg/*.cpp')
    sources += bld.path.ant_glob('taglib/ogg/vorbis/*.cpp')
    sources += bld.path.ant_glob('taglib/ogg/speex/*.cpp')
    sources += bld.path.ant_glob('taglib/ogg/flac/*.cpp')
    sources += bld.path.ant_glob('taglib/trueaudio/*.cpp')
    sources += bld.path.ant_glob('taglib/wavpack/*.cpp')
    sources += bld.path.ant_glob('taglib/ape/*.cpp')
    sources += bld.path.ant_glob('taglib/toolkit/*.cpp')
    obj.source = sources

    include_dirs = '''
            taglib
            taglib/toolkit
            taglib/flac
            taglib/ape
            taglib/mpc
            taglib/mpeg
            taglib/mpeg/id3v1
            taglib/mpeg/id3v2
            taglib/wavpack
            taglib/trueaudio
            taglib/ogg
            taglib/ogg/vorbis
            taglib/ogg/speex
            taglib/ogg/flac
    '''.split()
    obj.export_includes = ['.', 'taglib', 'taglib/toolkit']
    obj.includes     = include_dirs
    obj.name         = 'libtaglib'
    obj.target       = 'taglib'
    obj.vnum         = LIBTAGLIB_LIB_VERSION
    obj.install_path = os.path.join(bld.env['LIBDIR'], 'ardour3')

def shutdown():
    autowaf.shutdown()
