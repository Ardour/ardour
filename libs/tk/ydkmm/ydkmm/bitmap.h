// -*- c++ -*-
// Generated by gmmproc 2.45.3 -- DO NOT MODIFY!
#ifndef _GDKMM_BITMAP_H
#define _GDKMM_BITMAP_H


#include <glibmm/ustring.h>
#include <sigc++/sigc++.h>

/* $Id: bitmap.hg,v 1.3 2004/01/05 17:32:12 murrayc Exp $ */

/* Copyright (C) 2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <ydkmm/pixmap.h>


namespace Gdk
{

class Window;

// In GDK, GdkBitmap has the same type as GdkPixmap.  Both are typedefed
// to their base type GdkDrawable, but the real type is GdkPixmapObject.
// A GdkBitmap is a GdkPixmap with a depth of 1.

/** Bitmaps are simply pixmaps with a depth of 1. (That is, they are monochrome bitmaps - each pixel can be either on or off).
 */
class Bitmap : public Gdk::Pixmap
{
  // The Bitmap type only really exists in gtkmm.  We fake its existence
  // with a custom Gdk::Pixmap_Class::wrap_new() -- see comments there.
  public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef Bitmap CppObjectType;
  typedef GdkBitmap BaseObjectType;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

private:


protected:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  explicit Bitmap(GdkBitmap* castitem);
  friend class Gdk::Pixmap_Class;
#endif

  Bitmap(const char* data, int width, int height);

  Bitmap(const Glib::RefPtr<Gdk::Drawable>& drawable, const char* data, int width, int height);

public:
  
  static Glib::RefPtr<Bitmap> create(const char* data, int width, int height);


  static Glib::RefPtr<Bitmap> create(const Glib::RefPtr<Gdk::Drawable>& drawable, const char* data, int width, int height);


};

} // namespace Gdk


#endif /* _GDKMM_BITMAP_H */

