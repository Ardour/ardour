// -*- c++ -*-
// Generated by gmmproc 2.45.3 -- DO NOT MODIFY!
#ifndef _GTKMM_CELLRENDERERCOMBO_H
#define _GTKMM_CELLRENDERERCOMBO_H


#include <glibmm/ustring.h>
#include <sigc++/sigc++.h>

/* $Id: cellrenderercombo.hg,v 1.5 2006/05/10 20:59:27 murrayc Exp $ */

/* cellrenderercombo.h
 * 
 * Copyright (C) 2004 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <ytkmm/cellrenderertext.h>
#include <ytkmm/treemodel.h>


#ifndef DOXYGEN_SHOULD_SKIP_THIS
typedef struct _GtkCellRendererCombo GtkCellRendererCombo;
typedef struct _GtkCellRendererComboClass GtkCellRendererComboClass;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */


namespace Gtk
{ class CellRendererCombo_Class; } // namespace Gtk
namespace Gtk
{

/**  Renders a combobox in a cell.
 * CellRendererCombo renders text in a cell like CellRendererText, from which it is derived. But while 
 * CellRendererText offers a simple entry to edit the text, CellRendererCombo offers a ComboBox or 
 * ComboBoxEntry widget to edit the text. The values to display in the combo box are taken from the 
 * tree model specified in the model property.
 *
 * The combo cell renderer takes care of adding a text cell renderer to the combo box and sets it to 
 * display the column specified by its text_column property. Further cell renderers can be added in a 
 * handler for the editing_started signal. 
 *
 * @ingroup TreeView
 */

class CellRendererCombo : public CellRendererText
{
  public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef CellRendererCombo CppObjectType;
  typedef CellRendererCombo_Class CppClassType;
  typedef GtkCellRendererCombo BaseObjectType;
  typedef GtkCellRendererComboClass BaseClassType;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  virtual ~CellRendererCombo();

#ifndef DOXYGEN_SHOULD_SKIP_THIS

private:
  friend class CellRendererCombo_Class;
  static CppClassType cellrenderercombo_class_;

  // noncopyable
  CellRendererCombo(const CellRendererCombo&);
  CellRendererCombo& operator=(const CellRendererCombo&);

protected:
  explicit CellRendererCombo(const Glib::ConstructParams& construct_params);
  explicit CellRendererCombo(GtkCellRendererCombo* castitem);

#endif /* DOXYGEN_SHOULD_SKIP_THIS */

public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  static GType get_type()      G_GNUC_CONST;


  static GType get_base_type() G_GNUC_CONST;
#endif

  ///Provides access to the underlying C GtkObject.
  GtkCellRendererCombo*       gobj()       { return reinterpret_cast<GtkCellRendererCombo*>(gobject_); }

  ///Provides access to the underlying C GtkObject.
  const GtkCellRendererCombo* gobj() const { return reinterpret_cast<GtkCellRendererCombo*>(gobject_); }


public:
  //C++ methods used to invoke GTK+ virtual functions:

protected:
  //GTK+ Virtual Functions (override these to change behaviour):

  //Default Signal Handlers::


private:

public:

  CellRendererCombo();


  /**
   * @par Slot Prototype:
   * <tt>void on_my_%changed(const Glib::ustring& path, const TreeModel::iterator& iter)</tt>
   *
   */

  Glib::SignalProxy2< void,const Glib::ustring&,const TreeModel::iterator& > signal_changed();

 
  /** The model containing the possible values for the combo box.
   *
   * @return A PropertyProxy that allows you to get or set the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy< Glib::RefPtr<Gtk::TreeModel> > property_model() ;

/** The model containing the possible values for the combo box.
   *
   * @return A PropertyProxy_ReadOnly that allows you to get the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy_ReadOnly< Glib::RefPtr<Gtk::TreeModel> > property_model() const;

  /** A column in the data source model to get the strings from.
   *
   * @return A PropertyProxy that allows you to get or set the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy< int > property_text_column() ;

/** A column in the data source model to get the strings from.
   *
   * @return A PropertyProxy_ReadOnly that allows you to get the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy_ReadOnly< int > property_text_column() const;

  /** If FALSE, don't allow to enter strings other than the chosen ones.
   *
   * @return A PropertyProxy that allows you to get or set the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy< bool > property_has_entry() ;

/** If FALSE, don't allow to enter strings other than the chosen ones.
   *
   * @return A PropertyProxy_ReadOnly that allows you to get the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy_ReadOnly< bool > property_has_entry() const;


  virtual Glib::PropertyProxy_Base _property_renderable();


};

} /* namespace Gtk */


namespace Glib
{
  /** A Glib::wrap() method for this object.
   * 
   * @param object The C instance.
   * @param take_copy False if the result should take ownership of the C instance. True if it should take a new copy or ref.
   * @result A C++ instance that wraps this C instance.
   *
   * @relates Gtk::CellRendererCombo
   */
  Gtk::CellRendererCombo* wrap(GtkCellRendererCombo* object, bool take_copy = false);
} //namespace Glib


#endif /* _GTKMM_CELLRENDERERCOMBO_H */

