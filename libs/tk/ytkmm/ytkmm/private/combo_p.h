// -*- c++ -*-
// Generated by gmmproc 2.45.3 -- DO NOT MODIFY!
#ifndef _GTKMM_COMBO_P_H
#define _GTKMM_COMBO_P_H
#ifndef GTKMM_DISABLE_DEPRECATED


#include <ytkmm/private/box_p.h>
#include <ytkmm/private/item_p.h>

#include <glibmm/class.h>

namespace Gtk
{

class ComboDropDownItem_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef ComboDropDownItem CppObjectType;
  typedef GtkListItem BaseObjectType;
  typedef GtkListItemClass BaseClassType;
  typedef Gtk::Item_Class CppClassParent;
  typedef GtkItemClass BaseClassParent;

  friend class ComboDropDownItem;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void scroll_horizontal_callback(GtkListItem* self, GtkScrollType p0, gfloat p1);
  static void scroll_vertical_callback(GtkListItem* self, GtkScrollType p0, gfloat p1);

  //Callbacks (virtual functions):
};


} // namespace Gtk


#include <glibmm/class.h>

namespace Gtk
{

class ComboDropDown_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef ComboDropDown CppObjectType;
  typedef GtkList BaseObjectType;
  typedef GtkListClass BaseClassType;
  typedef Gtk::Container_Class CppClassParent;
  typedef GtkContainerClass BaseClassParent;

  friend class ComboDropDown;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void select_child_callback(GtkList* self, GtkWidget* p0);
  static void selection_changed_callback(GtkList* self);
  static void unselect_child_callback(GtkList* self, GtkWidget* p0);

  //Callbacks (virtual functions):
};


} // namespace Gtk


#include <glibmm/class.h>

namespace Gtk
{

class Combo_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef Combo CppObjectType;
  typedef GtkCombo BaseObjectType;
  typedef GtkComboClass BaseClassType;
  typedef Gtk::HBox_Class CppClassParent;
  typedef GtkHBoxClass BaseClassParent;

  friend class Combo;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
};


} // namespace Gtk

#endif // GTKMM_DISABLE_DEPRECATED


#endif /* _GTKMM_COMBO_P_H */

