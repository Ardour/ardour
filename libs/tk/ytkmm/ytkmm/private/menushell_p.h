// -*- c++ -*-
// Generated by gmmproc 2.45.3 -- DO NOT MODIFY!
#ifndef _GTKMM_MENUSHELL_P_H
#define _GTKMM_MENUSHELL_P_H


#include <ytkmm/private/container_p.h>
#include <ytkmm/menu.h>
#include <ytkmm/menubar.h>
#include <ytkmm/window.h>

#include <glibmm/class.h>

namespace Gtk
{

class MenuShell_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef MenuShell CppObjectType;
  typedef GtkMenuShell BaseObjectType;
  typedef GtkMenuShellClass BaseClassType;
  typedef Gtk::Container_Class CppClassParent;
  typedef GtkContainerClass BaseClassParent;

  friend class MenuShell;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void deactivate_callback(GtkMenuShell* self);
  static void selection_done_callback(GtkMenuShell* self);

  //Callbacks (virtual functions):
    static void insert_vfunc_callback(GtkMenuShell* self, GtkWidget* child, int position);
  };


} // namespace Gtk


#endif /* _GTKMM_MENUSHELL_P_H */

