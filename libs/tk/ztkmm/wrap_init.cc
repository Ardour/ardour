// Generated by generate_wrap_init.pl -- DO NOT MODIFY!

#include <glibmm.h>

// Disable the 'const' function attribute of the get_type() functions.
// GCC would optimize them out because we don't use the return value.
#undef  G_GNUC_CONST
#define G_GNUC_CONST /* empty */

#include <ztkmm/wrap_init.h>
#include <glibmm/error.h>
#include <glibmm/object.h>

// #include the widget headers so that we can call the get_type() static methods:
#include "ztkmm/action.h"
#include "ztkmm/component.h"
#include "ztkmm/document.h"
#include "ztkmm/editabletext.h"
#include "ztkmm/hyperlink.h"
#include "ztkmm/hypertext.h"
#include "ztkmm/image.h"
#include "ztkmm/implementor.h"
#include "ztkmm/noopobject.h"
#include "ztkmm/object.h"
#include "ztkmm/objectaccessible.h"
#include "ztkmm/relation.h"
#include "ztkmm/relationset.h"
#include "ztkmm/selection.h"
#include "ztkmm/stateset.h"
#include "ztkmm/streamablecontent.h"
#include "ztkmm/table.h"
#include "ztkmm/text.h"
#include "ztkmm/value.h"

extern "C"
{
//Declarations of the *_get_type() functions:

GType atk_hyperlink_get_type(void);
GType atk_no_op_object_get_type(void);
GType atk_object_get_type(void);
GType atk_gobject_accessible_get_type(void);
GType atk_relation_get_type(void);
GType atk_relation_set_get_type(void);
GType atk_state_set_get_type(void);

//Declarations of the *_error_quark() functions:

} // extern "C"

namespace Atk {

//Declarations of the *_Class::wrap_new() methods, instead of including all the private headers:

class Hyperlink_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class NoOpObject_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Object_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class ObjectAccessible_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class Relation_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class RelationSet_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };
class StateSet_Class { public: static Glib::ObjectBase* wrap_new(GObject*); };

void wrap_init()
{
  // Register Error domains in the main namespace:

  // Map gtypes to gtkmm wrapper-creation functions:
  Glib::wrap_register(atk_hyperlink_get_type(), &Hyperlink_Class::wrap_new);
  Glib::wrap_register(atk_no_op_object_get_type(), &NoOpObject_Class::wrap_new);
  Glib::wrap_register(atk_object_get_type(), &Object_Class::wrap_new);
  Glib::wrap_register(atk_gobject_accessible_get_type(), &ObjectAccessible_Class::wrap_new);
  Glib::wrap_register(atk_relation_get_type(), &Relation_Class::wrap_new);
  Glib::wrap_register(atk_relation_set_get_type(), &RelationSet_Class::wrap_new);
  Glib::wrap_register(atk_state_set_get_type(), &StateSet_Class::wrap_new);

  // Register the gtkmm gtypes:
  Hyperlink::get_type();
  NoOpObject::get_type();
  Object::get_type();
  ObjectAccessible::get_type();
  Relation::get_type();
  RelationSet::get_type();
  StateSet::get_type();

} // wrap_init()

} // Atk

