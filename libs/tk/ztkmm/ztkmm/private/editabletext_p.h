// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _ATKMM_EDITABLETEXT_P_H
#define _ATKMM_EDITABLETEXT_P_H


#include <glibmm/private/interface_p.h>

namespace Atk
{

class EditableText_Class : public Glib::Interface_Class
{
public:
  typedef EditableText CppObjectType;
  typedef AtkEditableText BaseObjectType;
  typedef AtkEditableTextIface BaseClassType;
  typedef Glib::Interface_Class CppClassParent;

  friend class EditableText;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static gboolean set_run_attributes_vfunc_callback(AtkEditableText* self, AtkAttributeSet* attrib_set, gint start_offset, gint end_offset);
  static void set_text_contents_vfunc_callback(AtkEditableText* self, const gchar* string);
  static void insert_text_vfunc_callback(AtkEditableText* self, const gchar* string, gint length, gint* position);
  static void copy_text_vfunc_callback(AtkEditableText* self, gint start_pos, gint end_pos);
  static void cut_text_vfunc_callback(AtkEditableText* self, gint start_pos, gint end_pos);
  static void delete_text_vfunc_callback(AtkEditableText* self, gint start_pos, gint end_pos);
  static void paste_text_vfunc_callback(AtkEditableText* self, gint position);
};


} // namespace Atk


#endif /* _ATKMM_EDITABLETEXT_P_H */

