// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _ATKMM_HYPERTEXT_P_H
#define _ATKMM_HYPERTEXT_P_H


#include <glibmm/private/object_p.h>

#include <glibmm/private/interface_p.h>

namespace Atk
{

class Hypertext_Class : public Glib::Interface_Class
{
public:
  typedef Hypertext CppObjectType;
  typedef AtkHypertext BaseObjectType;
  typedef AtkHypertextIface BaseClassType;
  typedef Glib::Interface_Class CppClassParent;

  friend class Hypertext;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void link_selected_callback(AtkHypertext* self, gint p0);

  //Callbacks (virtual functions):
  static AtkHyperlink* get_link_vfunc_callback(AtkHypertext* self, gint link_index);
  static gint get_n_links_vfunc_callback(AtkHypertext* self);
  static gint get_link_index_vfunc_callback(AtkHypertext* self, gint char_index);
};


} // namespace Atk


#endif /* _ATKMM_HYPERTEXT_P_H */

