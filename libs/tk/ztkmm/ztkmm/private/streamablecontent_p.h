// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _ATKMM_STREAMABLECONTENT_P_H
#define _ATKMM_STREAMABLECONTENT_P_H


#include <glibmm/private/object_p.h>

#include <glibmm/private/interface_p.h>

namespace Atk
{

class StreamableContent_Class : public Glib::Interface_Class
{
public:
  typedef StreamableContent CppObjectType;
  typedef AtkStreamableContent BaseObjectType;
  typedef AtkStreamableContentIface BaseClassType;
  typedef Glib::Interface_Class CppClassParent;

  friend class StreamableContent;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static int get_n_mime_types_vfunc_callback(AtkStreamableContent* self);
  static const gchar* get_mime_type_vfunc_callback(AtkStreamableContent* self, gint i);
  static GIOChannel* get_stream_vfunc_callback(AtkStreamableContent* self, const gchar* mime_type);
};


} // namespace Atk


#endif /* _ATKMM_STREAMABLECONTENT_P_H */

