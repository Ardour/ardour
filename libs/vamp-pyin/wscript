#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
import os

# Library version (UNIX style major, minor, micro)
# major increment <=> incompatible changes
# minor increment <=> compatible changes (additions)
# micro increment <=> no interface changes
VAMP_PYIN_LIB_VERSION = '0.0.0'

# Variables for 'waf dist'
APPNAME = 'libardourvamppyin'
VERSION = '1.1'

# Mandatory variables
top = '.'
out = 'build'

def options(opt):
    autowaf.set_options(opt)

def configure(conf):
    conf.load('compiler_cxx')
    autowaf.configure(conf)

def build(bld):
    # Library
    obj = bld(features = 'cxx cxxshlib')
    obj.source = '''
       libmain.cpp
       PYinVamp.cpp
       YinVamp.cpp
       LocalCandidatePYIN.cpp
       Yin.cpp
       YinUtil.cpp
       MonoNote.cpp
       MonoPitch.cpp
       MonoNoteParameters.cpp
       SparseHMM.cpp
       MonoNoteHMM.cpp
       MonoPitchHMM.cpp
    '''
    obj.export_includes = ['.']
    obj.includes     = ['.']
    obj.name         = 'libardourvamppyin'
    obj.target       = 'ardourvamppyin'
    obj.uselib       = 'VAMPSDK'
    obj.use          = 'libvampplugin'
    autowaf.ensure_visible_symbols (obj, True)
    obj.vnum         = VAMP_PYIN_LIB_VERSION
    obj.install_path = os.path.join(bld.env['LIBDIR'], 'vamp')

def shutdown():
    autowaf.shutdown()
