#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
from waflib import Options
from waflib import TaskGen
import os

# Version of this package (even if built as a child)
MAJOR = '1'
MINOR = '6'
MICRO = '0'
ZRESAMPLER_VERSION = "%s.%s.%s" % (MAJOR, MINOR, MICRO)

# Library version (UNIX style major, minor, micro)
# major increment <=> incompatible changes
# minor increment <=> compatible changes (additions)
# micro increment <=> no interface changes
ZRESAMPLER_LIB_VERSION = '1.6.0'

# Variables for 'waf dist'
APPNAME = 'zita-resampler'
VERSION = ZRESAMPLER_VERSION
I18N_PACKAGE = 'libzita-resampler'

# Mandatory variables
top = '.'
out = 'build'

zresampler_sources = [
        'resampler.cc',
        'resampler-table.cc',
        'cresampler.cc',
        'vresampler.cc',
        'vmresampler.cc'
]

def options(opt):
    autowaf.set_options(opt)

def configure(conf):
    conf.load ('compiler_cxx')
    autowaf.configure(conf)

def build(bld):
    obj = bld.stlib(features = 'cxx cxxstlib', source = zresampler_sources)
    obj.cxxflags        = [ bld.env['compiler_flags_dict']['pic'], '-O3', '-ffast-math' ]
    obj.export_includes = ['.']
    obj.includes        = ['.']
    obj.name            = 'zita-resampler'
    obj.target          = 'zita-resampler'
    obj.vnum            = ZRESAMPLER_LIB_VERSION
    obj.defines         = [ 'PACKAGE="' + I18N_PACKAGE + '"' ]

def shutdown():
    autowaf.shutdown()
